/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserListFOrm.java
 *
 * Created on Apr 7, 2013, 1:00:37 PM
 */
package com.unit7.videocollection.forms;

import com.unit7.videocollection.entities.Message;
import com.unit7.videocollection.entities.Street;
import com.unit7.videocollection.entities.Users;
import com.unit7.videocollection.forms.processors.FormProcessor;
import com.unit7.videocollection.utils.HibernateUtil;
import com.unit7.videocollection.utils.impl.MessageFieldGetterImpl;
import com.unit7.videocollection.utils.impl.MessageFieldSetterImpl;
import com.unit7.videocollection.utils.impl.UserFieldGetterImpl;
import com.unit7.videocollection.utils.impl.UserFieldSetterImpl;
import java.math.BigInteger;
import java.util.Date;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;

/**
 *
 * @author unit7
 */
public class UserListForm extends javax.swing.JFrame {

    /** Creates new form UserListFOrm */
    public UserListForm() {
        initComponents();
        userTable1.refresh();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable1 = new com.unit7.videocollection.utils.components.UserTable();
        newUserButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        sendMessage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.unit7.videocollection.VideoCollectionApp.class).getContext().getResourceMap(UserListForm.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        userTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        userTable1.setName("userTable1"); // NOI18N
        jScrollPane1.setViewportView(userTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        newUserButton.setText(resourceMap.getString("newUserButton.text")); // NOI18N
        newUserButton.setName("newUserButton"); // NOI18N
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });

        refreshButton.setText(resourceMap.getString("refreshButton.text")); // NOI18N
        refreshButton.setName("refreshButton"); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        sendMessage.setText(resourceMap.getString("sendMessage.text")); // NOI18N
        sendMessage.setName("sendMessage"); // NOI18N
        sendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendMessage)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUserButton)
                    .addComponent(refreshButton)
                    .addComponent(sendMessage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
    userTable1.refresh();
}//GEN-LAST:event_refreshButtonActionPerformed

private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserButtonActionPerformed
    SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                final UserAddForm form = new UserAddForm();
                form.setVisible(true);
                
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Object[] info = FormProcessor.getInfo(form);
                        
                        Users user = new Users();
                        
                        user.setFirstName((String) info[0]);
                        user.setLastName((String) info[1]);
                        user.setPhone((String) info[2]);
                        user.setHouse((BigInteger) info[3]);
                        user.setStreet((Street) info[4]);
                        
                        HibernateUtil.insertEntity(user, new UserFieldSetterImpl(), new UserFieldGetterImpl());
                    }
                }).start();
            }
        });
}//GEN-LAST:event_newUserButtonActionPerformed

private void sendMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageActionPerformed
    SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                if (userTable1.getSelectedRows().length != 1)
                    return;

                int selectedRow = userTable1.getSelectedRow();
                TableModel model = userTable1.getModel();
                final UserMessageAddForm form = new UserMessageAddForm(
                        new Object[] { model.getValueAt(selectedRow, 0) });
                form.setVisible(true);

                new Thread(new Runnable() {
                        @Override
                        public void run() {
                            Object[] info = FormProcessor.getInfo(form);

                            Message message = new Message();
                            message.setMessUser((Users) info[0]);
                            message.setMessDate((Date) info[1]);
                            message.setDescription((String) info[2]);

                            HibernateUtil.insertEntity(message, new MessageFieldSetterImpl(), new MessageFieldGetterImpl());
                        }
                    }).start();
            }
    });
}//GEN-LAST:event_sendMessageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new UserListForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newUserButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton sendMessage;
    private com.unit7.videocollection.utils.components.UserTable userTable1;
    // End of variables declaration//GEN-END:variables
}
